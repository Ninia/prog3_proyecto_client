package ud.binmonkey.prog3_proyecto_client.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

/**
 * Created by saulsegura on 14/6/17.
 */
public class ConfgForm {
    public JPanel MainJPanel;
    public JPanel TitleJPanel;
    public JPanel PropertiesJPanel;
    public JLabel TitleJLabel;
    public JTextField httpsclientHostTf;
    public JTextField httpsclientPortTf;
    public JTextField ftpHostTf;
    public JTextField ftpPortTf;
    public JTextField testclientPortTf;
    public JTextField neo4jserverAddressTf;
    public JTextField neo4jserverUsernameTf;
    public JTextField neo4jserverPasswordTf;
    public JLabel networkJLabel;
    public JLabel httpsclientJLabel;
    public JLabel httpsclientHostJLabel;
    public JLabel httpsclientPortJLabel;
    public JLabel ftpJLabel;
    public JLabel ftpHostJLabel;
    public JLabel ftpPortJLabel;
    public JLabel testclientJLabel;
    public JLabel testclientPortJLabel;
    public JLabel neo4jserverJLabel;
    public JLabel neo4jserverAddressJLabel;
    public JLabel neo4jserverUsernameJLabel;
    public JLabel neo4jserverPasswordJLabel;
    public JPanel PrJPanel;

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        MainJPanel.setLayout(new BorderLayout(0, 0));
        TitleJPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        MainJPanel.add(TitleJPanel, BorderLayout.NORTH);
        TitleJLabel.setText("Properties");
        TitleJPanel.add(TitleJLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        PropertiesJPanel.setLayout(new BorderLayout(0, 0));
        MainJPanel.add(PropertiesJPanel, BorderLayout.CENTER);
        final Spacer spacer1 = new Spacer();
        PropertiesJPanel.add(spacer1, BorderLayout.NORTH);
        final Spacer spacer2 = new Spacer();
        PropertiesJPanel.add(spacer2, BorderLayout.WEST);
        final Spacer spacer3 = new Spacer();
        PropertiesJPanel.add(spacer3, BorderLayout.EAST);
        final Spacer spacer4 = new Spacer();
        PropertiesJPanel.add(spacer4, BorderLayout.SOUTH);
        PrJPanel.setLayout(new GridLayoutManager(13, 6, new Insets(0, 0, 0, 0), -1, -1));
        PrJPanel.setBackground(new Color(-263173));
        PropertiesJPanel.add(PrJPanel, BorderLayout.CENTER);
        networkJLabel.setInheritsPopupMenu(false);
        networkJLabel.setText("NETWORK");
        PrJPanel.add(networkJLabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        httpsclientJLabel.setText("Https Client");
        PrJPanel.add(httpsclientJLabel, new GridConstraints(1, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        httpsclientHostJLabel.setText("Host :");
        PrJPanel.add(httpsclientHostJLabel, new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        httpsclientPortJLabel.setText("Port :");
        PrJPanel.add(httpsclientPortJLabel, new GridConstraints(3, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ftpJLabel.setText("FTP");
        PrJPanel.add(ftpJLabel, new GridConstraints(4, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ftpHostJLabel.setText("Host :");
        PrJPanel.add(ftpHostJLabel, new GridConstraints(5, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ftpPortJLabel.setText("Port :");
        PrJPanel.add(ftpPortJLabel, new GridConstraints(6, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        testclientJLabel.setText("Test Client");
        PrJPanel.add(testclientJLabel, new GridConstraints(7, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        testclientPortJLabel.setText("Port :");
        PrJPanel.add(testclientPortJLabel, new GridConstraints(8, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        neo4jserverJLabel.setText("Neo4j Server");
        PrJPanel.add(neo4jserverJLabel, new GridConstraints(9, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        neo4jserverAddressJLabel.setText("Server address :");
        PrJPanel.add(neo4jserverAddressJLabel, new GridConstraints(10, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        PrJPanel.add(spacer5, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        PrJPanel.add(spacer6, new GridConstraints(2, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        neo4jserverUsernameJLabel.setText("Username :");
        PrJPanel.add(neo4jserverUsernameJLabel, new GridConstraints(11, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        neo4jserverPasswordJLabel.setText("Password :");
        PrJPanel.add(neo4jserverPasswordJLabel, new GridConstraints(12, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        PrJPanel.add(httpsclientHostTf, new GridConstraints(2, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        PrJPanel.add(httpsclientPortTf, new GridConstraints(3, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        PrJPanel.add(ftpHostTf, new GridConstraints(5, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        PrJPanel.add(ftpPortTf, new GridConstraints(6, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        PrJPanel.add(testclientPortTf, new GridConstraints(8, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        PrJPanel.add(neo4jserverAddressTf, new GridConstraints(10, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        PrJPanel.add(neo4jserverUsernameTf, new GridConstraints(11, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        PrJPanel.add(neo4jserverPasswordTf, new GridConstraints(12, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer7 = new Spacer();
        PrJPanel.add(spacer7, new GridConstraints(1, 4, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return MainJPanel;
    }
}
